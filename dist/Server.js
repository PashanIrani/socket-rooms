/*! For license information please see Server.js.LICENSE.txt */
!function(e,o){"object"==typeof exports&&"object"==typeof module?module.exports=o():"function"==typeof define&&define.amd?define([],o):"object"==typeof exports?exports.SocketRoomsServer=o():e.SocketRoomsServer=o()}(this,(()=>(()=>{"use strict";var __webpack_modules__={"./src/common/Events.ts":(__unused_webpack_module,exports)=>{eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports[\"default\"] = {\n    JOIN_ROOM: 'join room',\n    SEND_MESSAGE: 'send message',\n    LISTEN_FOR_MESSAGES: 'listen for messages',\n    GET_JOINED_ROOMS: 'get joined rooms',\n    GET_JOINED_ROOMS_RESPONSE: 'get joined rooms response'\n};\n\n\n//# sourceURL=webpack://SocketRooms/./src/common/Events.ts?")},"./src/common/Member.ts":(__unused_webpack_module,exports)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Member = void 0;\nvar Member = (function () {\n    function Member(id) {\n        this.rooms = [];\n        this.id = id;\n    }\n    return Member;\n}());\nexports.Member = Member;\n\n\n//# sourceURL=webpack://SocketRooms/./src/common/Member.ts?')},"./src/common/MessageData.ts":(__unused_webpack_module,exports)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.MessageData = void 0;\nvar MessageData = (function () {\n    function MessageData(from, message, roomId) {\n        this.from = from;\n        this.message = message;\n        this.roomId = roomId;\n    }\n    return MessageData;\n}());\nexports.MessageData = MessageData;\n\n\n//# sourceURL=webpack://SocketRooms/./src/common/MessageData.ts?')},"./src/common/Room.ts":(__unused_webpack_module,exports)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Room = void 0;\nvar Room = (function () {\n    function Room(id, capacity) {\n        this.capacity = null;\n        this.members = [];\n        this.id = id;\n        if (capacity) {\n            this.capacity = capacity;\n        }\n    }\n    Room.prototype.hasMember = function (member) {\n        for (var i = 0; i < this.members.length; ++i) {\n            if (this.members[i].id === member.id)\n                return true;\n        }\n        return false;\n    };\n    Room.prototype.addMember = function (member) {\n        if (this.hasMember(member))\n            return false;\n        this.members.push(member);\n        return true;\n    };\n    Room.prototype.removeMember = function (id) {\n        this.members = this.members.filter(function (member) {\n            return member.id !== id;\n        });\n    };\n    return Room;\n}());\nexports.Room = Room;\n\n\n//# sourceURL=webpack://SocketRooms/./src/common/Room.ts?')},"./src/common/index.ts":function(__unused_webpack_module,exports,__webpack_require__){eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Events = exports.Member = exports.MessageData = exports.Room = void 0;\nvar Room_1 = __webpack_require__(/*! ./Room */ "./src/common/Room.ts");\nObject.defineProperty(exports, "Room", ({ enumerable: true, get: function () { return Room_1.Room; } }));\nvar MessageData_1 = __webpack_require__(/*! ./MessageData */ "./src/common/MessageData.ts");\nObject.defineProperty(exports, "MessageData", ({ enumerable: true, get: function () { return MessageData_1.MessageData; } }));\nvar Member_1 = __webpack_require__(/*! ./Member */ "./src/common/Member.ts");\nObject.defineProperty(exports, "Member", ({ enumerable: true, get: function () { return Member_1.Member; } }));\nvar Events_1 = __importDefault(__webpack_require__(/*! ./Events */ "./src/common/Events.ts"));\nexports.Events = Events_1.default;\n\n\n//# sourceURL=webpack://SocketRooms/./src/common/index.ts?')},"./src/server/index.ts":(__unused_webpack_module,exports,__webpack_require__)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.SocketRoomsServer = void 0;\nvar common_1 = __webpack_require__(/*! src/common */ "./src/common/index.ts");\nvar rooms = {};\nvar members = {};\nvar socketRoomService;\nfunction logState() {\n    console.log(rooms);\n    console.log(members);\n}\nvar createRoom = function (roomId, capacity) {\n    if (roomId in rooms) {\n        console.error("Room ".concat(roomId, " already exists."));\n        return;\n    }\n    var newRoom = new common_1.Room(roomId, capacity);\n    rooms[roomId] = newRoom;\n    console.debug("\\u2728 Room ".concat(roomId, " Created."));\n};\nvar joinRoom = function (data, socket) {\n    var member = data.member, roomId = data.roomId;\n    if (!(roomId in rooms)) {\n        console.error("Room with ID ".concat(roomId, " doesn\'t exist"));\n        return;\n    }\n    socket.join(data.roomId);\n    member.rooms.push(rooms[data.roomId]);\n    members[member.id] = member;\n    rooms[data.roomId].addMember(data.member);\n    console.debug("\\uD83D\\uDFE2 ".concat(socket.id, " joined Room [RoomId: ").concat(roomId, "]"));\n    logState();\n};\nvar sendMessageHandler = function (data) {\n    var roomId = data.roomId;\n    socketRoomService.to(roomId).emit(common_1.Events.LISTEN_FOR_MESSAGES, data);\n};\nvar disconnectCallback = function (socket) {\n    if (members[socket.id] == undefined) {\n        console.error("Member doesn\'t exist.");\n        return;\n    }\n    members[socket.id].rooms.forEach(function (room) {\n        room.removeMember(socket.id);\n    });\n    delete members[socket.id];\n    console.debug("\\u274C ".concat(socket.id, " disconnected "));\n    logState();\n};\nvar emitJoinedRooms = function (data) {\n    var me = data.me;\n    var rooms = [];\n    for (var i = 0; i < members[me.id].rooms.length; ++i) {\n        rooms.push(members[me.id].rooms[i].id);\n    }\n    socketRoomService.to(me.id).emit(common_1.Events.GET_JOINED_ROOMS_RESPONSE, rooms);\n};\nvar socketBehavior = function (socket) {\n    socket.on(common_1.Events.JOIN_ROOM, function (data) { return joinRoom(data, socket); });\n    socket.on(common_1.Events.SEND_MESSAGE, function (data) { return sendMessageHandler(data); });\n    socket.on(\'disconnecting\', function () { return disconnectCallback(socket); });\n    socket.on(common_1.Events.GET_JOINED_ROOMS, function (data) { return emitJoinedRooms(data); });\n};\nvar init = function (Server) {\n    socketRoomService = Server;\n    socketRoomService.on(\'connection\', socketBehavior);\n};\nvar SocketRoomsServer = { init: init, createRoom: createRoom };\nexports.SocketRoomsServer = SocketRoomsServer;\n\n\n//# sourceURL=webpack://SocketRooms/./src/server/index.ts?')}},__webpack_module_cache__={};function __webpack_require__(e){var o=__webpack_module_cache__[e];if(void 0!==o)return o.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(n.exports,n,n.exports,__webpack_require__),n.exports}var __webpack_exports__=__webpack_require__("./src/server/index.ts");return __webpack_exports__})()));