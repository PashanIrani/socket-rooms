/*! For license information please see Server.js.LICENSE.txt */
(()=>{"use strict";var __webpack_modules__={"./src/common/Events.ts":(__unused_webpack_module,exports)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports["default"] = {\n    JOIN_ROOM: \'join room\'\n};\n\n\n//# sourceURL=webpack://SocketRooms/./src/common/Events.ts?')},"./src/common/Room.ts":(__unused_webpack_module,exports)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Room = void 0;\nclass Room {\n    constructor(id, capacity) {\n        this.capacity = null;\n        this.activeMemberCount = 0;\n        this.id = id;\n        if (capacity) {\n            this.capacity = capacity;\n        }\n    }\n    incrementActiveMemberCount() {\n        this.activeMemberCount++;\n    }\n    decrementActiveMemberCount() {\n        this.activeMemberCount--;\n    }\n}\nexports.Room = Room;\n\n\n//# sourceURL=webpack://SocketRooms/./src/common/Room.ts?')},"./src/server/index.ts":function(__unused_webpack_module,exports,__webpack_require__){eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nconst Room_1 = __webpack_require__(/*! src/common/Room */ "./src/common/Room.ts");\nconst Events_1 = __importDefault(__webpack_require__(/*! src/common/Events */ "./src/common/Events.ts"));\nlet rooms = {};\nconst createRoom = (roomId, capacity) => {\n    if (roomId in rooms) {\n        console.error(`Room ${roomId} already exists.`);\n        return;\n    }\n    const newRoom = new Room_1.Room(roomId, capacity);\n    rooms[roomId] = newRoom;\n};\nconst joinRoom = (roomId, socket) => {\n    if (!rooms.hasOwnProperty(roomId))\n        return;\n    console.debug(`${socket.id} joining... RoomId: ${roomId}`);\n    socket.join(roomId);\n    rooms[roomId].incrementActiveMemberCount();\n};\nconst disconnectCallback = (socket) => {\n    console.debug(`${socket.id} disconnecting... `);\n    socket.rooms.forEach((room) => {\n        if (room === socket.id)\n            return;\n        rooms[room].decrementActiveMemberCount();\n        if (rooms[room].activeMemberCount == 0) {\n            delete rooms[room];\n        }\n    });\n};\nconst socketBehavior = (socket) => {\n    socket.on(Events_1.default.JOIN_ROOM, (roomId) => joinRoom(roomId, socket));\n    socket.on(\'disconnecting\', () => disconnectCallback(socket));\n};\nconst init = (Server) => {\n    const io = Server;\n    io.on(\'connection\', socketBehavior);\n};\nexports["default"] = { init, createRoom };\n\n\n//# sourceURL=webpack://SocketRooms/./src/server/index.ts?')}},__webpack_module_cache__={};function __webpack_require__(o){var e=__webpack_module_cache__[o];if(void 0!==e)return e.exports;var n=__webpack_module_cache__[o]={exports:{}};return __webpack_modules__[o].call(n.exports,n,n.exports,__webpack_require__),n.exports}var __webpack_exports__=__webpack_require__("./src/server/index.ts");module.exports.SocketRoomsServer=__webpack_exports__.default})();